    // === Script 1: Fungsi Produk & UI Detail ===
    console.log("Script 1: Definisi fungsi produk & UI detail.");
    const produkListContainer = document.getElementById('produk-list');

    function formatHarga(nilai) { const angka = parseInt(nilai); if (isNaN(angka)) return '0'; return angka.toLocaleString('id-ID'); }
    function setProdukView(mode) { const listElement = document.getElementById("produk-list"); const toggleButton = document.getElementById('toggle-view-button'); if (!listElement || !toggleButton) { console.warn("setProdukView: Elemen #produk-list atau #toggle-view-button tidak ditemukan."); return; } if (mode === 'single') { listElement.classList.remove('view-multi-col'); listElement.classList.add('view-single-col'); toggleButton.innerHTML = '<i class="fas fa-list"></i>'; toggleButton.title = 'Ubah ke Tampilan Grid'; currentViewMode = 'single'; console.log("Tampilan produk diubah ke: Single Column"); } else { listElement.classList.remove('view-single-col'); listElement.classList.add('view-multi-col'); toggleButton.innerHTML = '<i class="fas fa-th"></i>'; toggleButton.title = 'Ubah ke Tampilan List'; currentViewMode = 'multi'; console.log("Tampilan produk diubah ke: Multi Column (Grid)"); } try { localStorage.setItem('productViewMode', currentViewMode); } catch (e) { console.warn("Tidak dapat menyimpan preferensi tampilan:", e); } }
    function loadProduk() { console.log("Memulai loadProduk()..."); const url = "https://dev.pocer.online/api/v1/kategori/dompet-digital"; const listElement = document.getElementById("produk-list"); const staticHeaderLogo = document.getElementById('static-header-logo'); const staticHeaderName = document.getElementById('static-header-name'); if (!listElement) { console.error("Kritis: Elemen #produk-list tidak ditemukan."); return; } listElement.innerHTML = '<p style="text-align: center; color: #6c757d;">Mengambil data produk...</p>'; const xhr = new XMLHttpRequest(); xhr.open('GET', url, true); xhr.timeout = 15000; xhr.onload = function () { if (xhr.status >= 200 && xhr.status < 300) { console.log("loadProduk: Respons OK."); try { const data = JSON.parse(xhr.responseText); if (Array.isArray(data) && data.length > 0) { const filtered = data.filter(item => item.produk && item.produk.toLowerCase().includes('dana')); const sorted = filtered.sort((a, b) => parseInt(a.harga) - parseInt(b.harga)); if (sorted.length > 0) { const firstProduct = sorted[0]; const defaultImageUrl = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSGglzp3pi04sdTe7teWwIj3abbA0HHqwYcxwzXVWi5ueYhk_MwQge3tE8&s=10'; const logoUrl = firstProduct.gambar_url || defaultImageUrl; const productName = firstProduct.produk || 'Produk DANA'; if (staticHeaderLogo && staticHeaderName) { staticHeaderLogo.src = logoUrl; staticHeaderLogo.alt = `Logo ${productName}`; staticHeaderName.textContent = productName; staticHeaderLogo.style.display = logoUrl ? 'inline-block' : 'none'; console.log(`Header kiri atas diisi: ${productName}`); } else { console.warn("Elemen header kiri atas tidak ditemukan."); } } else { console.log("Tidak ada produk DANA ditemukan."); if (staticHeaderLogo) staticHeaderLogo.style.display = 'none'; if (staticHeaderName) staticHeaderName.textContent = 'Top Up DANA'; } let html = ''; sorted.forEach(item => { if (item.kode && item.harga && (item.keterangan || item.produk)) { const gambarUrl = item.gambar_url || 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSGglzp3pi04sdTe7teWwIj3abbA0HHqwYcxwzXVWi5ueYhk_MwQge3tE8&s=10'; let statusText = 'N/A'; let statusClass = 'status-unknown'; const itemStatusString = String(item.status); if (itemStatusString === "1") { statusText = 'Aktif'; statusClass = 'status-aktif'; } else if (itemStatusString === "0") { statusText = 'Nonaktif'; statusClass = 'status-nonaktif'; } const displayName = item.keterangan || item.kode; html += ` <div class="produk-card" data-kode="${item.kode}" data-harga="${item.harga}" data-keterangan="${item.keterangan || 'Tidak ada keterangan.'}" data-produk="${item.produk || 'Produk Tidak Diketahui'}" data-kategori="${item.kategori || 'Umum'}" data-gambar="${gambarUrl}" data-status="${item.status}"> <img src="${gambarUrl}" alt="Ikon ${item.produk || 'produk'}" class="produk-image"> <div class="produk-info"> <div class="produk-kode">${displayName}</div> <div class="produk-harga">Rp ${formatHarga(item.harga)}</div> </div> <span class="produk-status ${statusClass}">${statusText}</span> </div>`; } else { console.warn("Produk dilewati:", item); } }); listElement.innerHTML = html || '<p>Tidak ada produk Top Up DANA.</p>'; } else { listElement.innerHTML = '<p>Data produk kosong.</p>'; if (staticHeaderLogo) staticHeaderLogo.style.display = 'none'; if (staticHeaderName) staticHeaderName.textContent = 'Top Up DANA'; } } catch (e) { console.error("loadProduk: Gagal parsing JSON -", e); listElement.innerHTML = '<p>Gagal memproses data.</p>'; if (staticHeaderLogo) staticHeaderLogo.style.display = 'none'; if (staticHeaderName) staticHeaderName.textContent = 'Top Up DANA'; } } else { console.error(`loadProduk: Gagal. Status: ${xhr.status}`); listElement.innerHTML = `<p>Gagal memuat data (Kode: ${xhr.status}).</p>`; if (staticHeaderLogo) staticHeaderLogo.style.display = 'none'; if (staticHeaderName) staticHeaderName.textContent = 'Top Up DANA'; } }; xhr.onerror = function () { console.error("loadProduk: Jaringan error."); listElement.innerHTML = '<p>Koneksi server gagal.</p>'; if (staticHeaderLogo) staticHeaderLogo.style.display = 'none'; if (staticHeaderName) staticHeaderName.textContent = 'Top Up DANA'; }; xhr.ontimeout = function () { console.error("loadProduk: Timeout."); listElement.innerHTML = '<p>Server tidak merespons.</p>'; if (staticHeaderLogo) staticHeaderLogo.style.display = 'none'; if (staticHeaderName) staticHeaderName.textContent = 'Top Up DANA'; }; xhr.send(); console.log("loadProduk: Request dikirim."); }
    function tutupDetail() { const detailElement = document.getElementById("produk-detail"); const detailErrorElement = document.getElementById('detail-error'); const tombolBeli = document.getElementById('tombol-beli'); if (detailElement) { detailElement.classList.remove("show"); console.log("Panel detail ditutup."); if (detailErrorElement) { detailErrorElement.textContent = ''; detailErrorElement.removeAttribute('class'); detailErrorElement.style.display = 'none'; } if (tombolBeli) { tombolBeli.disabled = true; tombolBeli.classList.remove('button-loading'); tombolBeli.innerText = 'Beli Sekarang'; } } }
